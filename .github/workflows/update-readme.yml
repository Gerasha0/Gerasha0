name: Update README

on:
  schedule:
    - cron: "0 */6 * * *" # обновление каждые 6 часов
  workflow_dispatch: # возможность запустить вручную

jobs:
  update:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20

      - name: Install dependencies
        run: npm install axios dayjs

      - name: Update README
        run: |
          node << 'EOF'
          const fs = require('fs');
          const axios = require('axios');
          const dayjs = require('dayjs');

          const username = "Gerasha0";
          const readmePath = "README.md";

          async function getRepos() {
            const res = await axios.get(`https://api.github.com/users/${username}/repos?sort=updated&per_page=10`);
            return res.data.map(repo => `- [${repo.name}](${repo.html_url}) — ${dayjs(repo.updated_at).format('YYYY-MM-DD HH:mm')}`);
          }

          async function getCommits() {
            const repos = await axios.get(`https://api.github.com/users/${username}/repos?per_page=5&sort=updated`);
            let commitsList = [];

            for (let repo of repos.data) {
              const commits = await axios.get(`https://api.github.com/repos/${username}/${repo.name}/commits?per_page=1`);
              const commit = commits.data[0];
              if (commit) {
                commitsList.push(`- **${repo.name}**: [${commit.commit.message}](${commit.html_url}) — ${dayjs(commit.commit.author.date).format('YYYY-MM-DD HH:mm')}`);
              }
            }
            return commitsList;
          }

          (async () => {
            let readme = fs.readFileSync(readmePath, "utf8");

            // Обновляем проекты
            const projects = (await getRepos()).join("\n");
            readme = readme.replace(/(<!-- PROJECTS_START -->)([\s\S]*?)(<!-- PROJECTS_END -->)/, `$1\n${projects}\n$3`);

            // Обновляем коммиты
            const commits = (await getCommits()).join("\n");
            readme = readme.replace(/(<!-- COMMITS_START -->)([\s\S]*?)(<!-- COMMITS_END -->)/, `$1\n${commits}\n$3`);

            fs.writeFileSync(readmePath, readme);
          })();
          EOF

      - name: Commit and Push changes
        run: |
          git config --global user.name "GitHub Actions"
          git config --global user.email "actions@github.com"
          git add README.md
          git commit -m "chore: auto-update README [skip ci]" || exit 0
          git push
